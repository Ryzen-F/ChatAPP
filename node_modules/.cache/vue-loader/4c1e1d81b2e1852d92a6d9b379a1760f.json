{"remainingRequest":"C:\\Users\\Adam\\PhpstormProjects\\FDI-BWEB\\untitled3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Adam\\PhpstormProjects\\FDI-BWEB\\untitled3\\src\\components\\MessageForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Adam\\PhpstormProjects\\FDI-BWEB\\untitled3\\src\\components\\MessageForm.vue","mtime":1577463375178},{"path":"C:\\Users\\Adam\\PhpstormProjects\\FDI-BWEB\\untitled3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Adam\\PhpstormProjects\\FDI-BWEB\\untitled3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Adam\\PhpstormProjects\\FDI-BWEB\\untitled3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Adam\\PhpstormProjects\\FDI-BWEB\\untitled3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcFN0YXRlLCBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCcKaW1wb3J0IHsgaXNUeXBpbmcgfSBmcm9tICcuLi9jaGF0a2l0LmpzJwpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnbWVzc2FnZS1mb3JtJywKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgbWVzc2FnZTogJycKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICAuLi5tYXBTdGF0ZShbCiAgICAgICAgICAgICd1c2VyJywKICAgICAgICAgICAgJ3NlbmRpbmcnLAogICAgICAgICAgICAnZXJyb3InLAogICAgICAgICAgICAnYWN0aXZlUm9vbScKICAgICAgICBdKSwKICAgICAgICAuLi5tYXBHZXR0ZXJzKFsKICAgICAgICAgICAgJ2hhc0Vycm9yJwogICAgICAgIF0pCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC4uLm1hcEFjdGlvbnMoWwogICAgICAgICAgICAnc2VuZE1lc3NhZ2UnLAogICAgICAgIF0pLAogICAgICAgIGFzeW5jIG9uU3VibWl0KCkgewogICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLnNlbmRNZXNzYWdlKHRoaXMubWVzc2FnZSk7CiAgICAgICAgICAgIGlmKHJlc3VsdCkgewogICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gJyc7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGFzeW5jIGlzVHlwaW5nKCkgewogICAgICAgICAgICBhd2FpdCBpc1R5cGluZyh0aGlzLmFjdGl2ZVJvb20uaWQpOwogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["MessageForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MessageForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"message-form ld-over\">\r\n        <small class=\"text-muted\">@{{ user.username }}</small>\r\n        <b-form @submit.prevent=\"onSubmit\" class=\"ld-over\" v-bind:class=\"{ running: sending }\">\r\n            <div class=\"ld ld-ring ld-spin\"></div>\r\n            <b-alert variant=\"danger\" :show=\"hasError\">{{ error }} </b-alert>\r\n            <b-form-group>\r\n                <b-form-input id=\"message-input\"\r\n                              type=\"text\"\r\n                              v-model=\"message\"\r\n                              @input=\"isTyping\"\r\n                              placeholder=\"Enter Message\"\r\n                              autocomplete=\"off\"\r\n                              required>\r\n                </b-form-input>\r\n            </b-form-group>\r\n            <div class=\"clearfix\">\r\n                <b-button type=\"submit\" variant=\"primary\" class=\"float-right\">\r\n                    Send\r\n                </b-button>\r\n            </div>\r\n        </b-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapActions, mapState, mapGetters } from 'vuex'\r\n    import { isTyping } from '../chatkit.js'\r\n    export default {\r\n        name: 'message-form',\r\n        data() {\r\n            return {\r\n                message: ''\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState([\r\n                'user',\r\n                'sending',\r\n                'error',\r\n                'activeRoom'\r\n            ]),\r\n            ...mapGetters([\r\n                'hasError'\r\n            ])\r\n        },\r\n        methods: {\r\n            ...mapActions([\r\n                'sendMessage',\r\n            ]),\r\n            async onSubmit() {\r\n                const result = await this.sendMessage(this.message);\r\n                if(result) {\r\n                    this.message = '';\r\n                }\r\n            },\r\n            async isTyping() {\r\n                await isTyping(this.activeRoom.id);\r\n            }\r\n        }\r\n    }\r\n</script>"]}]}