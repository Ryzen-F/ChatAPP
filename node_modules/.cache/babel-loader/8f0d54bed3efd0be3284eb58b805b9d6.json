{"remainingRequest":"C:\\Users\\Adam\\PhpstormProjects\\FDI-BWEB\\untitled3\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Adam\\PhpstormProjects\\FDI-BWEB\\untitled3\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Adam\\PhpstormProjects\\FDI-BWEB\\untitled3\\src\\store\\actions.js","dependencies":[{"path":"C:\\Users\\Adam\\PhpstormProjects\\FDI-BWEB\\untitled3\\src\\store\\actions.js","mtime":1577462854700},{"path":"C:\\Users\\Adam\\PhpstormProjects\\FDI-BWEB\\untitled3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Adam\\PhpstormProjects\\FDI-BWEB\\untitled3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Adam\\PhpstormProjects\\FDI-BWEB\\untitled3\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxVc2Vyc1xcQWRhbVxcUGhwc3Rvcm1Qcm9qZWN0c1xcRkRJLUJXRUJcXHVudGl0bGVkM1xcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBjaGF0a2l0IGZyb20gJy4uL2NoYXRraXQnOwoKZnVuY3Rpb24gaGFuZGxlRXJyb3IoY29tbWl0LCBlcnJvcikgewogIHZhciBtZXNzYWdlID0gZXJyb3IubWVzc2FnZSB8fCBlcnJvci5pbmZvLmVycm9yX2Rlc2NyaXB0aW9uOwogIGNvbW1pdCgnc2V0RXJyb3InLCBtZXNzYWdlKTsKfQoKZXhwb3J0IGRlZmF1bHQgewogIGxvZ2luOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX2xvZ2luID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAvKiNfX1BVUkVfXyovCiAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKF9yZWYsIHVzZXJJZCkgewogICAgICB2YXIgY29tbWl0LCBzdGF0ZSwgY3VycmVudFVzZXIsIHJvb21zLCBhY3RpdmVSb29tOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQsIHN0YXRlID0gX3JlZi5zdGF0ZTsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICBjb21taXQoJ3NldEVycm9yJywgJycpOwogICAgICAgICAgICAgIGNvbW1pdCgnc2V0TG9hZGluZycsIHRydWUpOyAvLyBDb25uZWN0IHVzZXIgdG8gQ2hhdEtpdCBzZXJ2aWNlCgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgIHJldHVybiBjaGF0a2l0LmNvbm5lY3RVc2VyKHVzZXJJZCk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY3VycmVudFVzZXIgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGNvbW1pdCgnc2V0VXNlcicsIHsKICAgICAgICAgICAgICAgIHVzZXJuYW1lOiBjdXJyZW50VXNlci5pZCwKICAgICAgICAgICAgICAgIG5hbWU6IGN1cnJlbnRVc2VyLm5hbWUKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBjb21taXQoJ3NldFJlY29ubmVjdCcsIGZhbHNlKTsgLy8gU2F2ZSBsaXN0IG9mIHVzZXIncyByb29tcyBpbiBzdG9yZQoKICAgICAgICAgICAgICByb29tcyA9IGN1cnJlbnRVc2VyLnJvb21zLm1hcChmdW5jdGlvbiAocm9vbSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgaWQ6IHJvb20uaWQsCiAgICAgICAgICAgICAgICAgIG5hbWU6IHJvb20ubmFtZQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBjb21taXQoJ3NldFJvb21zJywgcm9vbXMpOyAvLyBTdWJzY3JpYmUgdXNlciB0byBhIHJvb20KCiAgICAgICAgICAgICAgYWN0aXZlUm9vbSA9IHN0YXRlLmFjdGl2ZVJvb20gfHwgcm9vbXNbMF07IC8vIHBpY2sgbGFzdCB1c2VkIHJvb20sIG9yIHRoZSBmaXJzdCBvbmUKCiAgICAgICAgICAgICAgY29tbWl0KCdzZXRBY3RpdmVSb29tJywgewogICAgICAgICAgICAgICAgaWQ6IGFjdGl2ZVJvb20uaWQsCiAgICAgICAgICAgICAgICBuYW1lOiBhY3RpdmVSb29tLm5hbWUKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgcmV0dXJuIGNoYXRraXQuc3Vic2NyaWJlVG9Sb29tKGFjdGl2ZVJvb20uaWQpOwoKICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCB0cnVlKTsKCiAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE4OwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgaGFuZGxlRXJyb3IoY29tbWl0LCBfY29udGV4dC50MCk7CgogICAgICAgICAgICBjYXNlIDIxOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyMTsKICAgICAgICAgICAgICBjb21taXQoJ3NldExvYWRpbmcnLCBmYWxzZSk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmZpbmlzaCgyMSk7CgogICAgICAgICAgICBjYXNlIDI0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDE4LCAyMSwgMjRdXSk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gbG9naW4oX3gsIF94MikgewogICAgICByZXR1cm4gX2xvZ2luLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIGxvZ2luOwogIH0oKSwKICBjaGFuZ2VSb29tOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX2NoYW5nZVJvb20gPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgIC8qI19fUFVSRV9fKi8KICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKF9yZWYyLCByb29tSWQpIHsKICAgICAgdmFyIGNvbW1pdCwgX3JlZjMsIGlkLCBuYW1lOwoKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gY2hhdGtpdC5zdWJzY3JpYmVUb1Jvb20ocm9vbUlkKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBfcmVmMyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIGlkID0gX3JlZjMuaWQ7CiAgICAgICAgICAgICAgbmFtZSA9IF9yZWYzLm5hbWU7CiAgICAgICAgICAgICAgY29tbWl0KCdzZXRBY3RpdmVSb29tJywgewogICAgICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICAgICAgbmFtZTogbmFtZQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgIGhhbmRsZUVycm9yKGNvbW1pdCwgX2NvbnRleHQyLnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1sxLCAxMF1dKTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBjaGFuZ2VSb29tKF94MywgX3g0KSB7CiAgICAgIHJldHVybiBfY2hhbmdlUm9vbS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBjaGFuZ2VSb29tOwogIH0oKSwKICBzZW5kTWVzc2FnZTogZnVuY3Rpb24gKCkgewogICAgdmFyIF9zZW5kTWVzc2FnZSA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgLyojX19QVVJFX18qLwogICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoX3JlZjQsIG1lc3NhZ2UpIHsKICAgICAgdmFyIGNvbW1pdCwgbWVzc2FnZUlkOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDE7CiAgICAgICAgICAgICAgY29tbWl0KCdzZXRFcnJvcicsICcnKTsKICAgICAgICAgICAgICBjb21taXQoJ3NldFNlbmRpbmcnLCB0cnVlKTsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDY7CiAgICAgICAgICAgICAgcmV0dXJuIGNoYXRraXQuc2VuZE1lc3NhZ2UobWVzc2FnZSk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgbWVzc2FnZUlkID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIG1lc3NhZ2VJZCk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgIGhhbmRsZUVycm9yKGNvbW1pdCwgX2NvbnRleHQzLnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxMzsKICAgICAgICAgICAgICBjb21taXQoJ3NldFNlbmRpbmcnLCBmYWxzZSk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5maW5pc2goMTMpOwoKICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzEsIDEwLCAxMywgMTZdXSk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gc2VuZE1lc3NhZ2UoX3g1LCBfeDYpIHsKICAgICAgcmV0dXJuIF9zZW5kTWVzc2FnZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBzZW5kTWVzc2FnZTsKICB9KCksCiAgbG9nb3V0OiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX2xvZ291dCA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgLyojX19QVVJFX18qLwogICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoX3JlZjUpIHsKICAgICAgdmFyIGNvbW1pdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNS5jb21taXQ7CiAgICAgICAgICAgICAgY29tbWl0KCdyZXNldCcpOwogICAgICAgICAgICAgIGNoYXRraXQuZGlzY29ubmVjdFVzZXIoKTsKICAgICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLmNsZWFyKCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNCk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gbG9nb3V0KF94NykgewogICAgICByZXR1cm4gX2xvZ291dC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBsb2dvdXQ7CiAgfSgpCn07"},{"version":3,"sources":["C:/Users/Adam/PhpstormProjects/FDI-BWEB/untitled3/src/store/actions.js"],"names":["chatkit","handleError","commit","error","message","info","error_description","login","userId","state","connectUser","currentUser","username","id","name","rooms","map","room","activeRoom","subscribeToRoom","changeRoom","roomId","sendMessage","messageId","logout","disconnectUser","window","localStorage","clear"],"mappings":"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","sourcesContent":["import chatkit from '../chatkit';\r\n\r\nfunction handleError(commit, error) {\r\n    const message = error.message || error.info.error_description;\r\n    commit('setError', message);\r\n}\r\n\r\nexport default {\r\n    async login({ commit, state }, userId) {\r\n        try {\r\n            commit('setError', '');\r\n            commit('setLoading', true);\r\n            // Connect user to ChatKit service\r\n            const currentUser = await chatkit.connectUser(userId);\r\n            commit('setUser', {\r\n                username: currentUser.id,\r\n                name: currentUser.name\r\n            });\r\n            commit('setReconnect', false);\r\n\r\n            // Save list of user's rooms in store\r\n            const rooms = currentUser.rooms.map(room => ({\r\n                id: room.id,\r\n                name: room.name\r\n            }))\r\n            commit('setRooms', rooms);\r\n\r\n            // Subscribe user to a room\r\n            const activeRoom = state.activeRoom || rooms[0]; // pick last used room, or the first one\r\n            commit('setActiveRoom', {\r\n                id: activeRoom.id,\r\n                name: activeRoom.name\r\n            });\r\n            await chatkit.subscribeToRoom(activeRoom.id);\r\n\r\n            return true;\r\n        } catch (error) {\r\n            handleError(commit, error)\r\n        } finally {\r\n            commit('setLoading', false);\r\n        }\r\n    },\r\n    async changeRoom({ commit }, roomId) {\r\n        try {\r\n            const { id, name } = await chatkit.subscribeToRoom(roomId);\r\n            commit('setActiveRoom', { id, name });\r\n        } catch (error) {\r\n            handleError(commit, error)\r\n        }\r\n    },\r\n    async sendMessage({ commit }, message) {\r\n        try {\r\n            commit('setError', '');\r\n            commit('setSending', true);\r\n            const messageId = await chatkit.sendMessage(message);\r\n            return messageId;\r\n        } catch (error) {\r\n            handleError(commit, error)\r\n        } finally {\r\n            commit('setSending', false);\r\n        }\r\n    },\r\n    async logout({ commit }) {\r\n        commit('reset');\r\n        chatkit.disconnectUser();\r\n        window.localStorage.clear();\r\n    }\r\n}"]}]}